Hum, I may add a readme before people ask me about this stuff.

So ...

THE README FILE
===============

Running groof of concept, not actual stuff.

This small piece of codes runs a browser based on the webkit library (safari,
chrome) and runs a script in it. Commands are opan and assert. assert just
matches some text against the full html (yeah, told ya it was a POC).

For now, it will run a browser on a X11 server, execute the script (python
tuple of tuples of script tokens) and show the test result on stdout.

The idea is to use a tester node which can run browsers, with optional external
output, using X11, to do simple functionnal tests from within another
independant software.

INSTALLATION
============
 - needs pygtk-2.0
 - needs pywebkitgtk (latest)

HAZARDOUS ZONE (random thoughts)
================================

Don't dream, that's just ideas, not actual work.

 dv1 dv2
  |  |
 [ VCS ]
    |
   [CI] <-> [WebKit+API]

dv(n) = development boxes
vcs = version control
ci = continuous integration

in sf functional test (or in any other func test framework)

->with('webkitapi-1.0')->begin()
	->do('
		open http://www.google.com/
		assert $title contains "Google"
		click $("a#test")
		assert ...
	')
->end()

version => language version
the tester can be completely bypassed if nor configured, node not available,
specific option used

now the crazy

sf func test:

->with('webkitapi-1.0')->begin()
	->record('182.168.0.11:0') # configure unix DISPLAY to show the recorder
->end()

tester comments the record line, and write generated code (commented maybe, or not, below)
